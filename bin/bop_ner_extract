#!/usr/bin/env python
"""
Script to extract entity data from csv data
"""
# -*- coding: utf-8 -*-

# sys libs
import os
import sys
import argparse

# local libs
from bankofparliament.extraction import NamedEntityExtract
from bankofparliament.utils import get_logger

# third party libs
from dotenv import load_dotenv

load_dotenv()
COMPANIES_HOUSE_APIKEY = os.getenv("COMPANIES_HOUSE_APIKEY")
OPENCORPORATES_APIKEY = os.getenv("OPENCORPORATES_APIKEY")
CHARITIES_COMMISION_APIKEY = os.getenv("CHARITIES_COMMISION_APIKEY")

if __name__ == "__main__":
    parser = argparse.ArgumentParser()
    parser.add_argument(
        "-d",
        "--debug",
        help="Debug prints",
        action="store_true",
        default=False,
    )
    parser.add_argument(
        "-e", "--entities", help="Entities file", action="store", default=None
    )
    parser.add_argument(
        "-r", "--relationships", help="Relationships file", action="store", default=None
    )
    parser.add_argument(
        "-c",
        "--custom_entities",
        help="Custom entities file",
        action="store",
        default=None,
    )
    parser.add_argument(
        "-p", "--prompt", help="Prompt input", action="store_true", default=False
    )
    parser.add_argument(
        "-f", "--from_index", help="From index", action="store", default=0, type=int
    )
    parser.add_argument(
        "-t", "--to_index", help="To index", action="store", default=-1, type=int
    )

    args = parser.parse_args()
    if not args.entities and args.relationships:
        sys.exit()

    extract = NamedEntityExtract(
        entities=args.entities,
        custom_entities=args.custom_entities,
        relationships=args.relationships,
        companies_house_apikey=COMPANIES_HOUSE_APIKEY,
        prompt=args.prompt,
        from_index=args.from_index,
        to_index=args.to_index,
        logger=get_logger("extract", args.debug),
    )
    extract.execute()
