#!/usr/bin/env python
"""
Script to create neo4j database from entities and relationship
"""
# -*- coding: utf-8 -*-

# sys libs
import os
import sys
import argparse

# local libs
from bankofparliament.graphdb import GraphDB
from bankofparliament.utils import get_logger

# third party libs
from dotenv import load_dotenv

load_dotenv()
NEO4J_HOST = os.getenv("NEO4J_HOST")
NEO4J_BOLT_PORT = os.getenv("NEO4J_BOLT_PORT")
NEO4J_PASSWORD = os.getenv("NEO4J_PASSWORD")
NEO4J_USER = os.getenv("NEO4J_USER")


if __name__ == "__main__":
    parser = argparse.ArgumentParser()
    parser.add_argument(
        "-d",
        "--debug",
        help="Debug prints",
        action="store_true",
        default=False,
    )
    parser.add_argument(
        "-r", "--relationships", help="Relationships file", action="store", default=None
    )
    parser.add_argument(
        "-e", "--entities", help="Entities file", action="store", default=None
    )
    parser.add_argument(
        "-l", "--limit", help="Entities file", action="store", type=int, default=-1
    )

    args = parser.parse_args()
    if not args.relationships or not args.entities:
        sys.exit()

    graphdb = GraphDB(
        host=NEO4J_HOST,
        port=NEO4J_BOLT_PORT,
        user=NEO4J_USER,
        password=NEO4J_PASSWORD,
        entities=args.entities,
        relationships=args.relationships,
        limit=args.limit,
        logger=get_logger("graphdb", args.debug),
    )
    graphdb.execute()
